<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.luoshi.mapper.TbBackgroundDetailsMapper" >
  <resultMap id="BaseResultMap" type="com.luoshi.pojo.TbBackgroundDetails" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="click_time" property="clickTime" jdbcType="TIMESTAMP" />
    <result column="shop_message" property="shopMessage" jdbcType="VARCHAR" />
    <result column="goods_id" property="goodsId" jdbcType="BIGINT" />
    <result column="use_id" property="useId" jdbcType="INTEGER" />
    <result column="dept_id" property="deptId" jdbcType="INTEGER" />
    <result column="group_id" property="groupId" jdbcType="INTEGER" />
    <result column="aliwangwang" property="aliwangwang" jdbcType="VARCHAR" />
    <result column="shop_name" property="shopName" jdbcType="VARCHAR" />
    <result column="goods_counts" property="goodsCounts" jdbcType="INTEGER" />
    <result column="goods_price" property="goodsPrice" jdbcType="DOUBLE" />
    <result column="orders_type" property="ordersType" jdbcType="VARCHAR" />
    <result column="orders_fl" property="ordersFl" jdbcType="DOUBLE" />
    <result column="pay" property="pay" jdbcType="DOUBLE" />
    <result column="pay_about" property="payAbout" jdbcType="DOUBLE" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
    <result column="pay_money" property="payMoney" jdbcType="DOUBLE" />
    <result column="money_about" property="moneyAbout" jdbcType="DOUBLE" />
    <result column="order_id" property="orderId" jdbcType="BIGINT" />
    <result column="gd_id" property="gdId" jdbcType="BIGINT" />
    <result column="goods_type" property="goodsType" jdbcType="VARCHAR" />
    <result column="beiyong" property="beiyong" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, create_time, click_time, shop_message, goods_id, use_id, dept_id, group_id, aliwangwang, 
    shop_name, goods_counts, goods_price, orders_type, orders_fl, pay, pay_about, pay_time, 
    pay_money, money_about, order_id, gd_id, goods_type, beiyong
  </sql>
  <sql id="Base_Column_List2" >
	 id, create_time, click_time, shop_message, goods_id, use_id, dept_id, group_id, aliwangwang,      
	 shop_name, SUM(goods_counts) goods_counts, goods_price, orders_type, orders_fl, SUM(pay) pay, 
	 SUM(pay_about) pay_about, pay_time, SUM(pay_money) pay_money, SUM(money_about) money_about, 
	 order_id, gd_id, goods_type, beiyong
 
  </sql>
  <select id="selectByExample2" resultMap="BaseResultMap" parameterType="com.luoshi.pojo.TbBackgroundDetailsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_background_details
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
     GROUP BY shop_name
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.luoshi.pojo.TbBackgroundDetailsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List2" />
    from tb_background_details
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
     GROUP BY goods_id,use_id
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_background_details
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_background_details
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.luoshi.pojo.TbBackgroundDetailsExample" >
    delete from tb_background_details
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.luoshi.pojo.TbBackgroundDetails" >
    insert into tb_background_details (id, create_time, click_time, 
      shop_message, goods_id, use_id, 
      dept_id, group_id, aliwangwang, 
      shop_name, goods_counts, goods_price, 
      orders_type, orders_fl, pay, 
      pay_about, pay_time, pay_money, 
      money_about, order_id, gd_id, 
      goods_type, beiyong)
    values (#{id,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{clickTime,jdbcType=TIMESTAMP}, 
      #{shopMessage,jdbcType=VARCHAR}, #{goodsId,jdbcType=BIGINT}, #{useId,jdbcType=INTEGER}, 
      #{deptId,jdbcType=INTEGER}, #{groupId,jdbcType=INTEGER}, #{aliwangwang,jdbcType=VARCHAR}, 
      #{shopName,jdbcType=VARCHAR}, #{goodsCounts,jdbcType=INTEGER}, #{goodsPrice,jdbcType=DOUBLE}, 
      #{ordersType,jdbcType=VARCHAR}, #{ordersFl,jdbcType=DOUBLE}, #{pay,jdbcType=DOUBLE}, 
      #{payAbout,jdbcType=DOUBLE}, #{payTime,jdbcType=TIMESTAMP}, #{payMoney,jdbcType=DOUBLE}, 
      #{moneyAbout,jdbcType=DOUBLE}, #{orderId,jdbcType=BIGINT}, #{gdId,jdbcType=BIGINT}, 
      #{goodsType,jdbcType=VARCHAR}, #{beiyong,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.luoshi.pojo.TbBackgroundDetails" >
    insert into tb_background_details
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="clickTime != null" >
        click_time,
      </if>
      <if test="shopMessage != null" >
        shop_message,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="useId != null" >
        use_id,
      </if>
      <if test="deptId != null" >
        dept_id,
      </if>
      <if test="groupId != null" >
        group_id,
      </if>
      <if test="aliwangwang != null" >
        aliwangwang,
      </if>
      <if test="shopName != null" >
        shop_name,
      </if>
      <if test="goodsCounts != null" >
        goods_counts,
      </if>
      <if test="goodsPrice != null" >
        goods_price,
      </if>
      <if test="ordersType != null" >
        orders_type,
      </if>
      <if test="ordersFl != null" >
        orders_fl,
      </if>
      <if test="pay != null" >
        pay,
      </if>
      <if test="payAbout != null" >
        pay_about,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="payMoney != null" >
        pay_money,
      </if>
      <if test="moneyAbout != null" >
        money_about,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="gdId != null" >
        gd_id,
      </if>
      <if test="goodsType != null" >
        goods_type,
      </if>
      <if test="beiyong != null" >
        beiyong,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="clickTime != null" >
        #{clickTime,jdbcType=TIMESTAMP},
      </if>
      <if test="shopMessage != null" >
        #{shopMessage,jdbcType=VARCHAR},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="useId != null" >
        #{useId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="groupId != null" >
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="aliwangwang != null" >
        #{aliwangwang,jdbcType=VARCHAR},
      </if>
      <if test="shopName != null" >
        #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="goodsCounts != null" >
        #{goodsCounts,jdbcType=INTEGER},
      </if>
      <if test="goodsPrice != null" >
        #{goodsPrice,jdbcType=DOUBLE},
      </if>
      <if test="ordersType != null" >
        #{ordersType,jdbcType=VARCHAR},
      </if>
      <if test="ordersFl != null" >
        #{ordersFl,jdbcType=DOUBLE},
      </if>
      <if test="pay != null" >
        #{pay,jdbcType=DOUBLE},
      </if>
      <if test="payAbout != null" >
        #{payAbout,jdbcType=DOUBLE},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payMoney != null" >
        #{payMoney,jdbcType=DOUBLE},
      </if>
      <if test="moneyAbout != null" >
        #{moneyAbout,jdbcType=DOUBLE},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="gdId != null" >
        #{gdId,jdbcType=BIGINT},
      </if>
      <if test="goodsType != null" >
        #{goodsType,jdbcType=VARCHAR},
      </if>
      <if test="beiyong != null" >
        #{beiyong,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.luoshi.pojo.TbBackgroundDetailsExample" resultType="java.lang.Integer" >
    select count(*) from tb_background_details
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_background_details
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.clickTime != null" >
        click_time = #{record.clickTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.shopMessage != null" >
        shop_message = #{record.shopMessage,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsId != null" >
        goods_id = #{record.goodsId,jdbcType=BIGINT},
      </if>
      <if test="record.useId != null" >
        use_id = #{record.useId,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null" >
        dept_id = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.groupId != null" >
        group_id = #{record.groupId,jdbcType=INTEGER},
      </if>
      <if test="record.aliwangwang != null" >
        aliwangwang = #{record.aliwangwang,jdbcType=VARCHAR},
      </if>
      <if test="record.shopName != null" >
        shop_name = #{record.shopName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsCounts != null" >
        goods_counts = #{record.goodsCounts,jdbcType=INTEGER},
      </if>
      <if test="record.goodsPrice != null" >
        goods_price = #{record.goodsPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.ordersType != null" >
        orders_type = #{record.ordersType,jdbcType=VARCHAR},
      </if>
      <if test="record.ordersFl != null" >
        orders_fl = #{record.ordersFl,jdbcType=DOUBLE},
      </if>
      <if test="record.pay != null" >
        pay = #{record.pay,jdbcType=DOUBLE},
      </if>
      <if test="record.payAbout != null" >
        pay_about = #{record.payAbout,jdbcType=DOUBLE},
      </if>
      <if test="record.payTime != null" >
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payMoney != null" >
        pay_money = #{record.payMoney,jdbcType=DOUBLE},
      </if>
      <if test="record.moneyAbout != null" >
        money_about = #{record.moneyAbout,jdbcType=DOUBLE},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.gdId != null" >
        gd_id = #{record.gdId,jdbcType=BIGINT},
      </if>
      <if test="record.goodsType != null" >
        goods_type = #{record.goodsType,jdbcType=VARCHAR},
      </if>
      <if test="record.beiyong != null" >
        beiyong = #{record.beiyong,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_background_details
    set id = #{record.id,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      click_time = #{record.clickTime,jdbcType=TIMESTAMP},
      shop_message = #{record.shopMessage,jdbcType=VARCHAR},
      goods_id = #{record.goodsId,jdbcType=BIGINT},
      use_id = #{record.useId,jdbcType=INTEGER},
      dept_id = #{record.deptId,jdbcType=INTEGER},
      group_id = #{record.groupId,jdbcType=INTEGER},
      aliwangwang = #{record.aliwangwang,jdbcType=VARCHAR},
      shop_name = #{record.shopName,jdbcType=VARCHAR},
      goods_counts = #{record.goodsCounts,jdbcType=INTEGER},
      goods_price = #{record.goodsPrice,jdbcType=DOUBLE},
      orders_type = #{record.ordersType,jdbcType=VARCHAR},
      orders_fl = #{record.ordersFl,jdbcType=DOUBLE},
      pay = #{record.pay,jdbcType=DOUBLE},
      pay_about = #{record.payAbout,jdbcType=DOUBLE},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      pay_money = #{record.payMoney,jdbcType=DOUBLE},
      money_about = #{record.moneyAbout,jdbcType=DOUBLE},
      order_id = #{record.orderId,jdbcType=BIGINT},
      gd_id = #{record.gdId,jdbcType=BIGINT},
      goods_type = #{record.goodsType,jdbcType=VARCHAR},
      beiyong = #{record.beiyong,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.luoshi.pojo.TbBackgroundDetails" >
    update tb_background_details
    <set >
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="clickTime != null" >
        click_time = #{clickTime,jdbcType=TIMESTAMP},
      </if>
      <if test="shopMessage != null" >
        shop_message = #{shopMessage,jdbcType=VARCHAR},
      </if>
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="useId != null" >
        use_id = #{useId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null" >
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="groupId != null" >
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="aliwangwang != null" >
        aliwangwang = #{aliwangwang,jdbcType=VARCHAR},
      </if>
      <if test="shopName != null" >
        shop_name = #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="goodsCounts != null" >
        goods_counts = #{goodsCounts,jdbcType=INTEGER},
      </if>
      <if test="goodsPrice != null" >
        goods_price = #{goodsPrice,jdbcType=DOUBLE},
      </if>
      <if test="ordersType != null" >
        orders_type = #{ordersType,jdbcType=VARCHAR},
      </if>
      <if test="ordersFl != null" >
        orders_fl = #{ordersFl,jdbcType=DOUBLE},
      </if>
      <if test="pay != null" >
        pay = #{pay,jdbcType=DOUBLE},
      </if>
      <if test="payAbout != null" >
        pay_about = #{payAbout,jdbcType=DOUBLE},
      </if>
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payMoney != null" >
        pay_money = #{payMoney,jdbcType=DOUBLE},
      </if>
      <if test="moneyAbout != null" >
        money_about = #{moneyAbout,jdbcType=DOUBLE},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="gdId != null" >
        gd_id = #{gdId,jdbcType=BIGINT},
      </if>
      <if test="goodsType != null" >
        goods_type = #{goodsType,jdbcType=VARCHAR},
      </if>
      <if test="beiyong != null" >
        beiyong = #{beiyong,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.luoshi.pojo.TbBackgroundDetails" >
    update tb_background_details
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      click_time = #{clickTime,jdbcType=TIMESTAMP},
      shop_message = #{shopMessage,jdbcType=VARCHAR},
      goods_id = #{goodsId,jdbcType=BIGINT},
      use_id = #{useId,jdbcType=INTEGER},
      dept_id = #{deptId,jdbcType=INTEGER},
      group_id = #{groupId,jdbcType=INTEGER},
      aliwangwang = #{aliwangwang,jdbcType=VARCHAR},
      shop_name = #{shopName,jdbcType=VARCHAR},
      goods_counts = #{goodsCounts,jdbcType=INTEGER},
      goods_price = #{goodsPrice,jdbcType=DOUBLE},
      orders_type = #{ordersType,jdbcType=VARCHAR},
      orders_fl = #{ordersFl,jdbcType=DOUBLE},
      pay = #{pay,jdbcType=DOUBLE},
      pay_about = #{payAbout,jdbcType=DOUBLE},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      pay_money = #{payMoney,jdbcType=DOUBLE},
      money_about = #{moneyAbout,jdbcType=DOUBLE},
      order_id = #{orderId,jdbcType=BIGINT},
      gd_id = #{gdId,jdbcType=BIGINT},
      goods_type = #{goodsType,jdbcType=VARCHAR},
      beiyong = #{beiyong,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>